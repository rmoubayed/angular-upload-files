{"version":3,"file":"angular-upload-files.umd.js","sources":["~/angular-upload-files/angular-upload-files/src/app/uploader/uploader/uploader.module.ts","~/angular-upload-files/angular-upload-files/src/app/uploader/uploader/uploader.component.ts","~/angular-upload-files/angular-upload-files/src/app/uploader/uploader/upload.service.ts"],"sourcesContent":["import { UploaderComponent, UploadParams } from './uploader.component';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadService } from './upload.service';\nexport class UploaderModule {\n/**\n * Guaranteed singletons for provided Services across App.\n * \n * @return {?} An Angular Module with Providers\n */\nstatic forRoot(): ModuleWithProviders {\n        return {\n          ngModule: UploaderModule,\n          providers: [\n            UploadService,\n          ]\n        };\n      }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    UploaderComponent,\n  ],\n  exports: [\n    UploaderComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UploaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nUploaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploaderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { UploadService } from './upload.service';\nimport { HttpClient, HttpHeaders, HttpParams, HttpEventType } from '@angular/common/http';\nimport { Component, OnInit, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport interface UploadParams {\n  formDataPropertyName: string;\n  extraParams : ExtraParams[];\n}\nexport interface ExtraParams {\n  paramValueIsFromFile: boolean;\n  paramName: string;\n  paramValue: any;\n}\nexport class UploaderComponent implements OnInit, OnDestroy, AfterViewInit {\n   buttonText: string = 'Choose File';\n   postUrl: string;\n   imagesRemovable: boolean;\n   usingImages: boolean;\n   buttonClass: string;\n   multiple: boolean;\n   showImagesOnAdd: boolean;\n   id: number;\n   uploadParams: UploadParams;\n   onFilesSelected : EventEmitter<any> = new EventEmitter<any>();\n   onUploadComplete : EventEmitter<any> = new EventEmitter<any>();\n   onImageRemoved : EventEmitter<any> = new EventEmitter<any>();\n   onFileRemoved : EventEmitter<any> = new EventEmitter<any>();\n\n  currentSourceImageIndex : number;\n\n  images: any[] = [];\n  files : File[] = [];\nprivate subscriptions : Subscription[] = [];\n/**\n * @param {?} http\n * @param {?} uploadService\n */\nconstructor(private http : HttpClient,\nprivate uploadService : UploadService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.subscriptions.push(this.uploadService.startUpload.subscribe(\n      (files)=>{\n        for(let /** @type {?} */ i=0; i<files.length;i++) {\n          this.onUpload(files[i]);\n        }\n      }\n    ))\n    this.subscriptions.push(this.uploadService.clearFiles.subscribe((data:any)=>{\n      let /** @type {?} */ len = JSON.parse(JSON.stringify(this.images.length));\n      if(data.id === this.id) {\n        for(let /** @type {?} */ i=0;i<this.files.length;i++) {\n          this.removeFile(i);\n        } \n      }\n    }))\n    this.subscriptions.push(this.uploadService.removeImage.subscribe((data:any)=>{\n      // console.log('removing');\n      if(data.id === this.id) {\n        this.removeImage(data.index);\n      }\n    }))\n    this.subscriptions.push(this.uploadService.removeFile.subscribe((data:any)=>{\n      // console.log('removing');\n      if(data.id === this.id) {\n        this.removeImage(data.index);\n      }\n    }))\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.addButtonStyle(this.buttonClass);\n  }\n/**\n * @param {?} file\n * @return {?}\n */\ngetBase64(file) {\n    return new Promise((resolve, reject) => {\n      const /** @type {?} */ reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonFileSelected(event) {\n    this.clearFiles();\n    if(event && event.target && event.target.files) {\n      let /** @type {?} */ files = /** @type {?} */(( <FileList> event.target.files));\n      if(this.usingImages) {\n        for(let /** @type {?} */ i=0; i<files.length;i++) {\n          console.log(files[i], event);\n          this.getBase64(files[i]).then(\n            data => {\n              this.images.push(data);\n              if(this.images.length === files.length) {\n                this.onFilesSelected.emit({files: files, base64s: this.images});\n              }\n            }\n          );\n        }\n      } else {\n        this.onFilesSelected.emit({files: files});\n      }\n    }\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nonUpload(file : File) {\n    let /** @type {?} */ fd = new FormData();\n    fd.append(this.uploadParams.formDataPropertyName, file, file.name);\n    let /** @type {?} */ params = new HttpParams();;\n    this.uploadParams.extraParams.forEach(\n      param => {\n        params = params.set(param.paramName, (param.paramValueIsFromFile ? file[param.paramValue] : param.paramValue));\n      }\n    )\n    this.http.post(this.postUrl, fd, {params: params, reportProgress:true, observe:'events'})\n    .subscribe(\n      (event) => {\n        if(event.type === HttpEventType.UploadProgress) {\n          // console.log('Upload Progress:', Math.round(event.loaded / event.total*100)+'%' );\n          this.uploadService.currentUploadProgress.next((event.loaded / event.total*100));\n        } else if( event.type === HttpEventType.Response) {\n          // console.log('Response: ', event);\n          this.onUploadComplete.emit({response: event, file: file});\n        }\n      }\n    )\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nremoveImage(index) {\n    if(this.imagesRemovable && this.usingImages) {\n      this.files.splice(index, 1);\n      this.images.splice(index, 1);\n      this.onImageRemoved.emit();\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nremoveFile(index) {\n    this.files.splice(index, 1);\n    this.onFileRemoved.emit();\n  }\n/**\n * @return {?}\n */\nclearFiles() {\n    this.files = /** @type {?} */(( <File[]>[]));\n    this.images = [];\n  }\n/**\n * @param {?} className\n * @return {?}\n */\naddButtonStyle(className : string) {\n    if(className.indexOf(' ') !== -1) {\n      let /** @type {?} */ classes = className.split(' ');\n      for(let /** @type {?} */ i=0; i<classes.length;i++) {\n        if(!( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.contains(classes[i])) {\n          ( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.add(classes[i]); \n        }  \n      }\n    } else {\n      if(!( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.contains(className)) {\n        ( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.add(className); \n      }  \n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.subscriptions.forEach( sub => sub.unsubscribe());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'app-uploader',\n  template: `\n    <input style=\"display: none\" type=\"file\" [multiple]=\"multiple\" (change)=\"onFileSelected($event)\" #fileInput>\n    <button id=\"uploadBtn{{id!==undefined?id:''}}\" (click)=\"fileInput.click()\">{{buttonText}}</button>\n    <div class=\"imageContainer\" *ngIf=\"showImagesOnAdd\">\n      <img\n      (click)=\"removeImage(v)\"\n      *ngFor=\"let image of images; let v=index\"                                 \n      style=\"max-width:100px\" [src]=\"image\" alt=\"noImg\">\n    </div>\n\n    <!-- (drop)=\"sortImages($event)\"\n\n    id=\"drag{{v}}\"\n    draggable=\"true\" \n    (dragstart)=\"checkPos($event, v)\" \n    (dragenter)=\"opacitize(v, '0.4')\"\n    (dragleave)=\"opacitize(v, '1')\"  -->\n  `,\n  styles: [`\n    .imageContainer {\n        display: block;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: UploadService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'buttonText': [{ type: Input },],\n'postUrl': [{ type: Input },],\n'imagesRemovable': [{ type: Input },],\n'usingImages': [{ type: Input },],\n'buttonClass': [{ type: Input },],\n'multiple': [{ type: Input },],\n'showImagesOnAdd': [{ type: Input },],\n'id': [{ type: Input },],\n'uploadParams': [{ type: Input },],\n'onFilesSelected': [{ type: Output },],\n'onUploadComplete': [{ type: Output },],\n'onImageRemoved': [{ type: Output },],\n'onFileRemoved': [{ type: Output },],\n};\n}\n\nfunction UploaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUploaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploaderComponent.ctorParameters;\n/** @type {?} */\nUploaderComponent.propDecorators;\n/** @type {?} */\nUploaderComponent.prototype.buttonText;\n/** @type {?} */\nUploaderComponent.prototype.postUrl;\n/** @type {?} */\nUploaderComponent.prototype.imagesRemovable;\n/** @type {?} */\nUploaderComponent.prototype.usingImages;\n/** @type {?} */\nUploaderComponent.prototype.buttonClass;\n/** @type {?} */\nUploaderComponent.prototype.multiple;\n/** @type {?} */\nUploaderComponent.prototype.showImagesOnAdd;\n/** @type {?} */\nUploaderComponent.prototype.id;\n/** @type {?} */\nUploaderComponent.prototype.uploadParams;\n/** @type {?} */\nUploaderComponent.prototype.onFilesSelected;\n/** @type {?} */\nUploaderComponent.prototype.onUploadComplete;\n/** @type {?} */\nUploaderComponent.prototype.onImageRemoved;\n/** @type {?} */\nUploaderComponent.prototype.onFileRemoved;\n/** @type {?} */\nUploaderComponent.prototype.currentSourceImageIndex;\n/** @type {?} */\nUploaderComponent.prototype.images;\n/** @type {?} */\nUploaderComponent.prototype.files;\n/** @type {?} */\nUploaderComponent.prototype.subscriptions;\n/** @type {?} */\nUploaderComponent.prototype.http;\n/** @type {?} */\nUploaderComponent.prototype.uploadService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class UploadService {\n    startUpload : Subject<any> = new Subject<any>();\n    currentUploadProgress: Subject<any> = new Subject<any>();\n    clearImages: Subject<any> = new Subject<any>();\n    clearFiles: Subject<any> = new Subject<any>();\n    removeFile: Subject<any> = new Subject<any>();\n    removeImage: Subject<any> = new Subject<any>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UploadService_tsickle_Closure_declarations() {\n/** @type {?} */\nUploadService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploadService.ctorParameters;\n/** @type {?} */\nUploadService.prototype.startUpload;\n/** @type {?} */\nUploadService.prototype.currentUploadProgress;\n/** @type {?} */\nUploadService.prototype.clearImages;\n/** @type {?} */\nUploadService.prototype.clearFiles;\n/** @type {?} */\nUploadService.prototype.removeFile;\n/** @type {?} */\nUploadService.prototype.removeImage;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","Output","Input","HttpClient","Component","HttpEventType","HttpParams","EventEmitter","http","Injectable","Subject"],"mappings":"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"}