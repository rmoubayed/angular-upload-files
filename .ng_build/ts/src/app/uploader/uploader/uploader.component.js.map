{"version":3,"sources":["uploader.component.ts"],"names":[],"mappings":"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","file":"uploader.component.js","sourceRoot":"","sourcesContent":["import { UploadService } from './upload.service';\nimport { HttpClient, HttpHeaders, HttpParams, HttpEventType } from '@angular/common/http';\nimport { Component, OnInit, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport interface UploadParams {\n  formDataPropertyName: string;\n  extraParams : ExtraParams[];\n}\nexport interface ExtraParams {\n  paramValueIsFromFile: boolean;\n  paramName: string;\n  paramValue: any;\n}\nexport class UploaderComponent implements OnInit, OnDestroy, AfterViewInit {\n   buttonText: string = 'Choose File';\n   postUrl: string;\n   imagesRemovable: boolean;\n   usingImages: boolean;\n   buttonClass: string;\n   multiple: boolean;\n   showImagesOnAdd: boolean;\n   id: number;\n   uploadParams: UploadParams;\n   onFilesSelected : EventEmitter<any> = new EventEmitter<any>();\n   onUploadComplete : EventEmitter<any> = new EventEmitter<any>();\n   onImageRemoved : EventEmitter<any> = new EventEmitter<any>();\n   onFileRemoved : EventEmitter<any> = new EventEmitter<any>();\n\n  currentSourceImageIndex : number;\n\n  images: any[] = [];\n  files : File[] = [];\nprivate subscriptions : Subscription[] = [];\n/**\n * @param {?} http\n * @param {?} uploadService\n */\nconstructor(private http : HttpClient,\nprivate uploadService : UploadService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.subscriptions.push(this.uploadService.startUpload.subscribe(\n      (files)=>{\n        for(let /** @type {?} */ i=0; i<files.length;i++) {\n          this.onUpload(files[i]);\n        }\n      }\n    ))\n    this.subscriptions.push(this.uploadService.clearFiles.subscribe((data:any)=>{\n      let /** @type {?} */ len = JSON.parse(JSON.stringify(this.images.length));\n      if(data.id === this.id) {\n        for(let /** @type {?} */ i=0;i<this.files.length;i++) {\n          this.removeFile(i);\n        } \n      }\n    }))\n    this.subscriptions.push(this.uploadService.removeImage.subscribe((data:any)=>{\n      // console.log('removing');\n      if(data.id === this.id) {\n        this.removeImage(data.index);\n      }\n    }))\n    this.subscriptions.push(this.uploadService.removeFile.subscribe((data:any)=>{\n      // console.log('removing');\n      if(data.id === this.id) {\n        this.removeImage(data.index);\n      }\n    }))\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.addButtonStyle(this.buttonClass);\n  }\n/**\n * @param {?} file\n * @return {?}\n */\ngetBase64(file) {\n    return new Promise((resolve, reject) => {\n      const /** @type {?} */ reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonFileSelected(event) {\n    this.clearFiles();\n    if(event && event.target && event.target.files) {\n      let /** @type {?} */ files = /** @type {?} */(( <FileList> event.target.files));\n      if(this.usingImages) {\n        for(let /** @type {?} */ i=0; i<files.length;i++) {\n          console.log(files[i], event);\n          this.getBase64(files[i]).then(\n            data => {\n              this.images.push(data);\n              if(this.images.length === files.length) {\n                this.onFilesSelected.emit({files: files, base64s: this.images});\n              }\n            }\n          );\n        }\n      } else {\n        this.onFilesSelected.emit({files: files});\n      }\n    }\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nonUpload(file : File) {\n    let /** @type {?} */ fd = new FormData();\n    fd.append(this.uploadParams.formDataPropertyName, file, file.name);\n    let /** @type {?} */ params = new HttpParams();;\n    this.uploadParams.extraParams.forEach(\n      param => {\n        params = params.set(param.paramName, (param.paramValueIsFromFile ? file[param.paramValue] : param.paramValue));\n      }\n    )\n    this.http.post(this.postUrl, fd, {params: params, reportProgress:true, observe:'events'})\n    .subscribe(\n      (event) => {\n        if(event.type === HttpEventType.UploadProgress) {\n          // console.log('Upload Progress:', Math.round(event.loaded / event.total*100)+'%' );\n          this.uploadService.currentUploadProgress.next((event.loaded / event.total*100));\n        } else if( event.type === HttpEventType.Response) {\n          // console.log('Response: ', event);\n          this.onUploadComplete.emit({response: event, file: file});\n        }\n      }\n    )\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nremoveImage(index) {\n    if(this.imagesRemovable && this.usingImages) {\n      this.files.splice(index, 1);\n      this.images.splice(index, 1);\n      this.onImageRemoved.emit();\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nremoveFile(index) {\n    this.files.splice(index, 1);\n    this.onFileRemoved.emit();\n  }\n/**\n * @return {?}\n */\nclearFiles() {\n    this.files = /** @type {?} */(( <File[]>[]));\n    this.images = [];\n  }\n/**\n * @param {?} className\n * @return {?}\n */\naddButtonStyle(className : string) {\n    if(className.indexOf(' ') !== -1) {\n      let /** @type {?} */ classes = className.split(' ');\n      for(let /** @type {?} */ i=0; i<classes.length;i++) {\n        if(!( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.contains(classes[i])) {\n          ( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.add(classes[i]); \n        }  \n      }\n    } else {\n      if(!( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.contains(className)) {\n        ( /** @type {?} */((<HTMLButtonElement>document.getElementById('uploadBtn'+(this.id!==undefined?this.id:''))))).classList.add(className); \n      }  \n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.subscriptions.forEach( sub => sub.unsubscribe());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'app-uploader',\n  template: `\n    <input style=\"display: none\" type=\"file\" [multiple]=\"multiple\" (change)=\"onFileSelected($event)\" #fileInput>\n    <button id=\"uploadBtn{{id!==undefined?id:''}}\" (click)=\"fileInput.click()\">{{buttonText}}</button>\n    <div class=\"imageContainer\" *ngIf=\"showImagesOnAdd\">\n      <img\n      (click)=\"removeImage(v)\"\n      *ngFor=\"let image of images; let v=index\"                                 \n      style=\"max-width:100px\" [src]=\"image\" alt=\"noImg\">\n    </div>\n\n    <!-- (drop)=\"sortImages($event)\"\n\n    id=\"drag{{v}}\"\n    draggable=\"true\" \n    (dragstart)=\"checkPos($event, v)\" \n    (dragenter)=\"opacitize(v, '0.4')\"\n    (dragleave)=\"opacitize(v, '1')\"  -->\n  `,\n  styles: [`\n    .imageContainer {\n        display: block;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: UploadService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'buttonText': [{ type: Input },],\n'postUrl': [{ type: Input },],\n'imagesRemovable': [{ type: Input },],\n'usingImages': [{ type: Input },],\n'buttonClass': [{ type: Input },],\n'multiple': [{ type: Input },],\n'showImagesOnAdd': [{ type: Input },],\n'id': [{ type: Input },],\n'uploadParams': [{ type: Input },],\n'onFilesSelected': [{ type: Output },],\n'onUploadComplete': [{ type: Output },],\n'onImageRemoved': [{ type: Output },],\n'onFileRemoved': [{ type: Output },],\n};\n}\n\nfunction UploaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUploaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploaderComponent.ctorParameters;\n/** @type {?} */\nUploaderComponent.propDecorators;\n/** @type {?} */\nUploaderComponent.prototype.buttonText;\n/** @type {?} */\nUploaderComponent.prototype.postUrl;\n/** @type {?} */\nUploaderComponent.prototype.imagesRemovable;\n/** @type {?} */\nUploaderComponent.prototype.usingImages;\n/** @type {?} */\nUploaderComponent.prototype.buttonClass;\n/** @type {?} */\nUploaderComponent.prototype.multiple;\n/** @type {?} */\nUploaderComponent.prototype.showImagesOnAdd;\n/** @type {?} */\nUploaderComponent.prototype.id;\n/** @type {?} */\nUploaderComponent.prototype.uploadParams;\n/** @type {?} */\nUploaderComponent.prototype.onFilesSelected;\n/** @type {?} */\nUploaderComponent.prototype.onUploadComplete;\n/** @type {?} */\nUploaderComponent.prototype.onImageRemoved;\n/** @type {?} */\nUploaderComponent.prototype.onFileRemoved;\n/** @type {?} */\nUploaderComponent.prototype.currentSourceImageIndex;\n/** @type {?} */\nUploaderComponent.prototype.images;\n/** @type {?} */\nUploaderComponent.prototype.files;\n/** @type {?} */\nUploaderComponent.prototype.subscriptions;\n/** @type {?} */\nUploaderComponent.prototype.http;\n/** @type {?} */\nUploaderComponent.prototype.uploadService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}